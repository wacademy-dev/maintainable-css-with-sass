<h3>Lesson 13, Exercise 1</h3>
<p>When we hover over our buttons, we can tell that we are hovering only because the cursor changes when the mouse enters and exits the button. Giving a stronger, clearer visual indicator that a user is hovering over our buttons would help to improve our users&rsquo; experiences.</p>
<p>Let&rsquo;s give the user some visual feedback by shifting the hue of the button&rsquo;s background when it&rsquo;s hovered over. But rather than always shifting the hover state by the same number of degrees, let&rsquo;s have it be dependent upon the hue of the button&rsquo;s background color.</p>
<p>If the hue of the button is less than 180 degrees, then we want to increase the hue of the hover color by 30 degrees. But if it&rsquo;s greater than, or equal to, 180 degrees, we should shift the hue backwards -60 degrees. To get the hue of the button color, we&rsquo;ll use Sass&rsquo;&nbsp;<code>hue()</code>&nbsp;function, which accepts a single color value as an argument, and returns its hue.&nbsp;<code>hue()</code>&rsquo;s full documentation can be found here:&nbsp;<a href="http://sass-lang.com/documentation/Sass/Script/Functions.html#hue-instance_method" target="_blank" rel="noopener noreferrer">http://sass-lang.com/documentation/Sass/Script/Functions.html#hue-instance_method</a></p>
<p>The .scss file is located in /sass/main.scss. It will compile to /public/css/style.css.</p>
<p><strong>Tasks</strong></p>
<ul>
<li>Create a mixin called&nbsp;<code>hover</code>&nbsp;with an argument called&nbsp;<code>$color</code></li>
<li>Create an @if/@else statement with a conditional statement that says if the hue of&nbsp;<code>$color</code>&nbsp;is less than 180</li>
<li>Adjust the hue of&nbsp;<code>$color</code>&nbsp;by&nbsp;<code>30</code>&nbsp;if the conditional statement is true by using the&nbsp;<code>adjust-hue()</code>&nbsp;function</li>
<li>Adjust the hue of&nbsp;<code>$color</code>&nbsp;by&nbsp;<code>-60</code>&nbsp;if the conditional statement is false<br />Using nesting, the ampersand, and the&nbsp;<code>:hover</code>&nbsp;pseudo-selector, create a hover selector for&nbsp;<code>.btn</code></li>
<li>Include the hover mixin in the&nbsp;<code>.btn:hover</code>&nbsp;selector, with the color value used in&nbsp;<code>.btn</code>&rsquo;s background property as its argument</li>
<li>Review the rendered webpage, hovering over the button to see the change in colo</li>
<li>Review the compiled CSS. the&nbsp;<code>.btn:hover</code>&nbsp;selector should contain a background property with the hue-shifted color value</li>
</ul>