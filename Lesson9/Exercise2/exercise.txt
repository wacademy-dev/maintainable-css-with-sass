<h3>Lesson 9, Exercise 2</h3>
<p>We&rsquo;ve made a mixin for our border, which is cool. But we can only use it on our mint-green buttons. But we made those pink buttons as well, whose borders we still have to style the old fashioned way.&nbsp;<em>gasp!!!</em></p>
<p>Let&rsquo;s adapt our border mixin to accept an argument named&nbsp;<code>$color</code>, allowing us to make it any color we want. And, since we are mainly creating mint-green buttons, let&rsquo;s give the argument a default value, sparing us from having to enter an argument for the majority of our uses.</p>
<p>The .scss file is located in /sass/main.scss. It will compile to /public/css/style.css.</p>
<p><strong>Tasks</strong></p>
<ul>
<li>Add a&nbsp;<code>$color</code>&nbsp;argument to the border mixin</li>
<li>Update the border property to use the&nbsp;<code>$color</code>&nbsp;value we pass it, rather than&nbsp;<code>$color-primary</code></li>
<li>Add a default value to the&nbsp;<code>$color</code>&nbsp;argument of&nbsp;<code>$color-primary</code></li>
<li>Replace the border property located with the&nbsp;<code>.btn--outline.btn--pink</code>&nbsp;selector with the&nbsp;<code>border</code>&nbsp;mixin</li>
<li>Pass&nbsp;<code>$color-secondary</code>&nbsp;as its argument</li>
<li>Review the rendered HTML, confirming that is hasn&rsquo;t changed, visually.</li>
<li>Review the compiled CSS to confirm that the border mixin is compiling as a border of&nbsp;<code>.1rem</code>&nbsp;that is&nbsp;<code>solid</code>, in the color of our choosing, unless we don&rsquo;t choose one, in which case it compiles as the value of&nbsp;<code>$color-primary</code></li>
</ul>